# This file is generated by a script.
# If you edit it directly then your changes may be lost!

'AGL': set([
	'AGLContext',
	'AGLPixelFormat',
	'AGL_ACCELERATED',
	'AGL_BUFFER_RECT',
	'AGL_DEPTH_SIZE',
	'AGL_DOUBLEBUFFER',
	'AGL_FULLSCREEN',
	'AGL_NONE',
	'AGL_RGBA',
	'aglChoosePixelFormat',
	'aglCreateContext',
	'aglDestroyContext',
	'aglDestroyPixelFormat',
	'aglEnable',
	'aglSetCurrentContext',
	'aglSetDrawable',
	'aglSetFullScreen',
	'aglSetInteger',
	'aglSwapBuffers',
	'aglUpdateContext']),

'GLEW': set([
	'GLEW_ARB_depth_texture',
	'GLEW_ARB_fragment_program',
	'GLEW_ARB_fragment_shader',
	'GLEW_ARB_multitexture',
	'GLEW_ARB_shader_objects',
	'GLEW_ARB_texture_cube_map',
	'GLEW_ARB_texture_env_combine',
	'GLEW_ARB_texture_non_power_of_two',
	'GLEW_ARB_texture_query_lod',
	'GLEW_ARB_texture_rectangle',
	'GLEW_ARB_vertex_buffer_object',
	'GLEW_ARB_vertex_program',
	'GLEW_ARB_vertex_shader',
	'GLEW_ATI_pn_triangles',
	'GLEW_EXT_compiled_vertex_array',
	'GLEW_EXT_framebuffer_object',
	'GLEW_EXT_pixel_buffer_object',
	'GLEW_EXT_separate_specular_color',
	'GLEW_EXT_texture_filter_anisotropic',
	'GLEW_EXT_texture_rectangle',
	'GLEW_NV_texture_rectangle',
	'GLEW_VERSION_1_1',
	'GLEW_VERSION_1_2',
	'GLEW_VERSION_3_0',
	'glewInit',
	'glewIsSupported',
	'glxew',
	'wglew']),

'GLM': set([
	'GLM_COLOR',
	'GLM_FLAT',
	'GLM_MATERIAL',
	'GLM_NONE',
	'GLM_SMOOTH',
	'GLM_TEXTURE',
	'GLMgroup',
	'GLMmaterial',
	'GLMmodel',
	'GLMnode',
	'GLMtriangle',
	'glmAbs',
	'glmAddGroup',
	'glmBuildEdgePointsMap',
	'glmBuildNeighborsMap',
	'glmCross',
	'glmDelete',
	'glmDimensions',
	'glmDirName',
	'glmDot',
	'glmDraw',
	'glmDrawSelectedTriangles',
	'glmEqual',
	'glmFacetNormals',
	'glmFindGroup',
	'glmFindMaterial',
	'glmFirstPass',
	'glmInitTex',
	'glmLinearTexture',
	'glmList',
	'glmMax',
	'glmNormalize',
	'glmOptimize',
	'glmOptimizeVectors',
	'glmReadMTL',
	'glmReadOBJ',
	'glmReadPPM',
	'glmReverseWinding',
	'glmScale',
	'glmSecondPass',
	'glmSpheremapTexture',
	'glmTranslate',
	'glmUnitize',
	'glmUseTex',
	'glmVertexNormals',
	'glmWeld',
	'glmWeldVectors',
	'glmWriteMTL',
	'glmWriteOBJ']),

'GLU': set([
	'GLU_FILL',
	'GLU_INSIDE',
	'GLU_OUTSIDE',
	'GLU_SILHOUETTE',
	'GLU_SMOOTH',
	'GLUquadric',
	'GLUquadricObj',
	'gluBuild2DMipmaps',
	'gluCylinder',
	'gluDeleteQuadric',
	'gluDisk',
	'gluErrorString',
	'gluLookAt',
	'gluNewQuadric',
	'gluOrtho2D',
	'gluPerspective',
	'gluProject',
	'gluQuadricDrawStyle',
	'gluQuadricNormals',
	'gluQuadricOrientation',
	'gluScaleImage',
	'gluSphere',
	'gluUnProject']),

'GLUT': set([
	'glutBitmapCharacter',
	'glutBitmapLength',
	'glutCreateWindow',
	'glutDisplayFunc',
	'glutGet',
	'glutGetModifiers',
	'glutIdleFunc',
	'glutInit',
	'glutInitDisplayMode',
	'glutInitWindowPosition',
	'glutInitWindowSize',
	'glutKeyboardFunc',
	'glutMainLoop',
	'glutMotionFunc',
	'glutMouseFunc',
	'glutPostRedisplay',
	'glutReshape',
	'glutReshapeFunc',
	'glutSolidSphere',
	'glutSwapBuffers']),

'GLX_3DFX_multisample': set([
	'GLX_3DFX_multisample',
	'GLX_SAMPLES_3DFX',
	'GLX_SAMPLE_BUFFERS_3DFX']),

'GLX_AMD_gpu_association': set([
	'GLX_AMD_gpu_association',
	'GLX_GPU_CLOCK_AMD',
	'GLX_GPU_FASTEST_TARGET_GPUS_AMD',
	'GLX_GPU_NUM_PIPES_AMD',
	'GLX_GPU_NUM_RB_AMD',
	'GLX_GPU_NUM_SIMD_AMD',
	'GLX_GPU_NUM_SPI_AMD',
	'GLX_GPU_OPENGL_VERSION_STRING_AMD',
	'GLX_GPU_RAM_AMD',
	'GLX_GPU_RENDERER_STRING_AMD',
	'GLX_GPU_VENDOR_AMD']),

'GLX_ARB_create_context': set([
	'GLX_ARB_create_context',
	'GLX_CONTEXT_DEBUG_BIT_ARB',
	'GLX_CONTEXT_FLAGS_ARB',
	'GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB',
	'GLX_CONTEXT_MAJOR_VERSION_ARB',
	'GLX_CONTEXT_MINOR_VERSION_ARB',
	'glXCreateContextAttribsARB']),

'GLX_ARB_create_context_profile': set([
	'GLX_ARB_create_context_profile',
	'GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB',
	'GLX_CONTEXT_CORE_PROFILE_BIT_ARB',
	'GLX_CONTEXT_PROFILE_MASK_ARB']),

'GLX_ARB_create_context_robustness': set([
	'GLX_ARB_create_context_robustness',
	'GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB',
	'GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB',
	'GLX_LOSE_CONTEXT_ON_RESET_ARB',
	'GLX_NO_RESET_NOTIFICATION_ARB']),

'GLX_ARB_fbconfig_float': set([
	'GLX_ARB_fbconfig_float',
	'GLX_RGBA_FLOAT_BIT',
	'GLX_RGBA_FLOAT_TYPE']),

'GLX_ARB_framebuffer_sRGB': set([
	'GLX_ARB_framebuffer_sRGB',
	'GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB']),

'GLX_ARB_get_proc_address': set([
	'GLX_ARB_get_proc_address']),

'GLX_ARB_multisample': set([
	'GLX_ARB_multisample',
	'GLX_SAMPLES_ARB',
	'GLX_SAMPLE_BUFFERS_ARB']),

'GLX_ARB_vertex_buffer_object': set([
	'GLX_ARB_vertex_buffer_object',
	'GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB']),

'GLX_ATI_pixel_format_float': set([
	'GLX_ATI_pixel_format_float',
	'GLX_RGBA_FLOAT_ATI_BIT']),

'GLX_ATI_render_texture': set([
	'GLX_ATI_render_texture',
	'GLX_AUX0_ATI',
	'GLX_AUX1_ATI',
	'GLX_AUX2_ATI',
	'GLX_AUX3_ATI',
	'GLX_AUX4_ATI',
	'GLX_AUX5_ATI',
	'GLX_AUX6_ATI',
	'GLX_AUX7_ATI',
	'GLX_AUX8_ATI',
	'GLX_AUX9_ATI',
	'GLX_BACK_LEFT_ATI',
	'GLX_BACK_RIGHT_ATI',
	'GLX_BIND_TO_TEXTURE_INTENSITY_ATI',
	'GLX_BIND_TO_TEXTURE_LUMINANCE_ATI',
	'GLX_BIND_TO_TEXTURE_RGBA_ATI',
	'GLX_BIND_TO_TEXTURE_RGB_ATI',
	'GLX_CUBE_MAP_FACE_ATI',
	'GLX_FRONT_LEFT_ATI',
	'GLX_FRONT_RIGHT_ATI',
	'GLX_MIPMAP_LEVEL_ATI',
	'GLX_MIPMAP_TEXTURE_ATI',
	'GLX_NO_TEXTURE_ATI',
	'GLX_TEXTURE_1D_ATI',
	'GLX_TEXTURE_2D_ATI',
	'GLX_TEXTURE_CUBE_MAP_ATI',
	'GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI',
	'GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI',
	'GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI',
	'GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI',
	'GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI',
	'GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI',
	'GLX_TEXTURE_FORMAT_ATI',
	'GLX_TEXTURE_RGBA_ATI',
	'GLX_TEXTURE_RGB_ATI',
	'GLX_TEXTURE_TARGET_ATI',
	'glXBindTexImageATI',
	'glXDrawableAttribATI',
	'glXReleaseTexImageATI']),

'GLX_EXT_create_context_es2_profile': set([
	'GLX_CONTEXT_ES2_PROFILE_BIT_EXT',
	'GLX_EXT_create_context_es2_profile']),

'GLX_EXT_fbconfig_packed_float': set([
	'GLX_EXT_fbconfig_packed_float',
	'GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT',
	'GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT']),

'GLX_EXT_framebuffer_sRGB': set([
	'GLX_EXT_framebuffer_sRGB',
	'GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT']),

'GLX_EXT_import_context': set([
	'GLXContextID',
	'GLX_EXT_import_context',
	'GLX_SCREEN_EXT',
	'GLX_SHARE_CONTEXT_EXT',
	'GLX_VISUAL_ID_EXT',
	'glXFreeContextEXT',
	'glXGetContextIDEXT',
	'glXImportContextEXT',
	'glXQueryContextInfoEXT']),

'GLX_EXT_scene_marker': set([
	'GLX_EXT_scene_marker']),

'GLX_EXT_swap_control': set([
	'GLX_EXT_swap_control',
	'GLX_MAX_SWAP_INTERVAL_EXT',
	'GLX_SWAP_INTERVAL_EXT',
	'glXSwapIntervalEXT']),

'GLX_EXT_texture_from_pixmap': set([
	'GLX_AUX0_EXT',
	'GLX_AUX1_EXT',
	'GLX_AUX2_EXT',
	'GLX_AUX3_EXT',
	'GLX_AUX4_EXT',
	'GLX_AUX5_EXT',
	'GLX_AUX6_EXT',
	'GLX_AUX7_EXT',
	'GLX_AUX8_EXT',
	'GLX_AUX9_EXT',
	'GLX_BACK_LEFT_EXT',
	'GLX_BACK_RIGHT_EXT',
	'GLX_BIND_TO_MIPMAP_TEXTURE_EXT',
	'GLX_BIND_TO_TEXTURE_RGBA_EXT',
	'GLX_BIND_TO_TEXTURE_RGB_EXT',
	'GLX_BIND_TO_TEXTURE_TARGETS_EXT',
	'GLX_EXT_texture_from_pixmap',
	'GLX_FRONT_LEFT_EXT',
	'GLX_FRONT_RIGHT_EXT',
	'GLX_MIPMAP_TEXTURE_EXT',
	'GLX_TEXTURE_1D_BIT_EXT',
	'GLX_TEXTURE_1D_EXT',
	'GLX_TEXTURE_2D_BIT_EXT',
	'GLX_TEXTURE_2D_EXT',
	'GLX_TEXTURE_FORMAT_EXT',
	'GLX_TEXTURE_FORMAT_NONE_EXT',
	'GLX_TEXTURE_FORMAT_RGBA_EXT',
	'GLX_TEXTURE_FORMAT_RGB_EXT',
	'GLX_TEXTURE_RECTANGLE_BIT_EXT',
	'GLX_TEXTURE_RECTANGLE_EXT',
	'GLX_TEXTURE_TARGET_EXT',
	'GLX_Y_INVERTED_EXT',
	'glXBindTexImageEXT',
	'glXReleaseTexImageEXT']),

'GLX_EXT_visual_info': set([
	'GLX_DIRECT_COLOR_EXT',
	'GLX_EXT_visual_info',
	'GLX_GRAY_SCALE_EXT',
	'GLX_NONE_EXT',
	'GLX_PSEUDO_COLOR_EXT',
	'GLX_STATIC_COLOR_EXT',
	'GLX_STATIC_GRAY_EXT',
	'GLX_TRANSPARENT_ALPHA_VALUE_EXT',
	'GLX_TRANSPARENT_BLUE_VALUE_EXT',
	'GLX_TRANSPARENT_GREEN_VALUE_EXT',
	'GLX_TRANSPARENT_INDEX_EXT',
	'GLX_TRANSPARENT_INDEX_VALUE_EXT',
	'GLX_TRANSPARENT_RED_VALUE_EXT',
	'GLX_TRANSPARENT_RGB_EXT',
	'GLX_TRANSPARENT_TYPE_EXT',
	'GLX_TRUE_COLOR_EXT',
	'GLX_X_VISUAL_TYPE_EXT']),

'GLX_EXT_visual_rating': set([
	'GLX_EXT_visual_rating',
	'GLX_NON_CONFORMANT_VISUAL_EXT',
	'GLX_SLOW_VISUAL_EXT',
	'GLX_VISUAL_CAVEAT_EXT']),

'GLX_INTEL_swap_event': set([
	'GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK',
	'GLX_COPY_COMPLETE_INTEL',
	'GLX_EXCHANGE_COMPLETE_INTEL',
	'GLX_FLIP_COMPLETE_INTEL',
	'GLX_INTEL_swap_event']),

'GLX_MESA_agp_offset': set([
	'GLX_MESA_agp_offset',
	'glXGetAGPOffsetMESA']),

'GLX_MESA_copy_sub_buffer': set([
	'GLX_MESA_copy_sub_buffer',
	'glXCopySubBufferMESA']),

'GLX_MESA_pixmap_colormap': set([
	'GLXPixmap',
	'GLX_MESA_pixmap_colormap',
	'glXCreateGLXPixmapMESA']),

'GLX_MESA_release_buffers': set([
	'GLX_MESA_release_buffers',
	'glXReleaseBuffersMESA']),

'GLX_MESA_set_3dfx_mode': set([
	'GLX_3DFX_FULLSCREEN_MODE_MESA',
	'GLX_3DFX_WINDOW_MODE_MESA',
	'GLX_MESA_set_3dfx_mode',
	'glXSet3DfxModeMESA']),

'GLX_MESA_swap_control': set([
	'GLX_MESA_swap_control',
	'glXGetSwapIntervalMESA',
	'glXSwapIntervalMESA']),

'GLX_NV_copy_image': set([
	'GLX_NV_copy_image',
	'glXCopyImageSubDataNV']),

'GLX_NV_float_buffer': set([
	'GLX_FLOAT_COMPONENTS_NV',
	'GLX_NV_float_buffer']),

'GLX_NV_multisample_coverage': set([
	'GLX_COLOR_SAMPLES_NV',
	'GLX_COVERAGE_SAMPLES_NV',
	'GLX_NV_multisample_coverage']),

'GLX_NV_present_video': set([
	'GLX_NUM_VIDEO_SLOTS_NV',
	'GLX_NV_present_video',
	'glXBindVideoDeviceNV',
	'glXEnumerateVideoDevicesNV']),

'GLX_NV_swap_group': set([
	'GLX_NV_swap_group',
	'glXBindSwapBarrierNV',
	'glXJoinSwapGroupNV',
	'glXQueryFrameCountNV',
	'glXQueryMaxSwapGroupsNV',
	'glXQuerySwapGroupNV',
	'glXResetFrameCountNV']),

'GLX_NV_vertex_array_range': set([
	'GLX_NV_vertex_array_range',
	'glXAllocateMemoryNV',
	'glXFreeMemoryNV']),

'GLX_NV_video_capture': set([
	'GLXVideoCaptureDeviceNV',
	'GLX_DEVICE_ID_NV',
	'GLX_NUM_VIDEO_CAPTURE_SLOTS_NV',
	'GLX_NV_video_capture',
	'GLX_UNIQUE_ID_NV',
	'glXBindVideoCaptureDeviceNV',
	'glXEnumerateVideoCaptureDevicesNV',
	'glXLockVideoCaptureDeviceNV',
	'glXQueryVideoCaptureDeviceNV',
	'glXReleaseVideoCaptureDeviceNV']),

'GLX_NV_video_output': set([
	'GLX_NV_video_output',
	'GLX_VIDEO_OUT_ALPHA_NV',
	'GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV',
	'GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV',
	'GLX_VIDEO_OUT_COLOR_NV',
	'GLX_VIDEO_OUT_DEPTH_NV',
	'GLX_VIDEO_OUT_FIELD_1_NV',
	'GLX_VIDEO_OUT_FIELD_2_NV',
	'GLX_VIDEO_OUT_FRAME_NV',
	'GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV',
	'GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV',
	'glXBindVideoImageNV',
	'glXGetVideoDeviceNV',
	'glXGetVideoInfoNV',
	'glXReleaseVideoDeviceNV',
	'glXReleaseVideoImageNV',
	'glXSendPbufferToVideoNV']),

'GLX_OML_swap_method': set([
	'GLX_OML_swap_method',
	'GLX_SWAP_COPY_OML',
	'GLX_SWAP_EXCHANGE_OML',
	'GLX_SWAP_METHOD_OML',
	'GLX_SWAP_UNDEFINED_OML']),

'GLX_OML_sync_control': set([
	'GLX_OML_sync_control',
	'glXGetMscRateOML',
	'glXGetSyncValuesOML',
	'glXSwapBuffersMscOML',
	'glXWaitForMscOML',
	'glXWaitForSbcOML']),

'GLX_SGIS_blended_overlay': set([
	'GLX_BLENDED_RGBA_SGIS',
	'GLX_SGIS_blended_overlay']),

'GLX_SGIS_color_range': set([
	'GLX_EXTENDED_RANGE_SGIS',
	'GLX_MAX_ALPHA_SGIS',
	'GLX_MAX_BLUE_SGIS',
	'GLX_MAX_GREEN_SGIS',
	'GLX_MAX_RED_SGIS',
	'GLX_MIN_ALPHA_SGIS',
	'GLX_MIN_BLUE_SGIS',
	'GLX_MIN_GREEN_SGIS',
	'GLX_MIN_RED_SGIS',
	'GLX_SGIS_color_range']),

'GLX_SGIS_multisample': set([
	'GLX_SAMPLES_SGIS',
	'GLX_SAMPLE_BUFFERS_SGIS',
	'GLX_SGIS_multisample']),

'GLX_SGIS_shared_multisample': set([
	'GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS',
	'GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS',
	'GLX_SGIS_shared_multisample']),

'GLX_SGIX_fbconfig': set([
	'GLXFBConfigIDSGIX',
	'GLXFBConfigSGIX',
	'GLX_COLOR_INDEX_BIT_SGIX',
	'GLX_COLOR_INDEX_TYPE_SGIX',
	'GLX_DRAWABLE_TYPE_SGIX',
	'GLX_FBCONFIG_ID_SGIX',
	'GLX_PIXMAP_BIT_SGIX',
	'GLX_RENDER_TYPE_SGIX',
	'GLX_RGBA_BIT_SGIX',
	'GLX_RGBA_TYPE_SGIX',
	'GLX_SCREEN_EXT',
	'GLX_SGIX_fbconfig',
	'GLX_WINDOW_BIT_SGIX',
	'GLX_X_RENDERABLE_SGIX',
	'glXChooseFBConfigSGIX',
	'glXCreateContextWithConfigSGIX',
	'glXCreateGLXPixmapWithConfigSGIX',
	'glXGetFBConfigAttribSGIX',
	'glXGetFBConfigFromVisualSGIX',
	'glXGetVisualFromFBConfigSGIX']),

'GLX_SGIX_hyperpipe': set([
	'GLXHyperpipeConfigSGIX',
	'GLXHyperpipeNetworkSGIX',
	'GLXPipeRect',
	'GLXPipeRectLimits',
	'GLX_BAD_HYPERPIPE_CONFIG_SGIX',
	'GLX_BAD_HYPERPIPE_SGIX',
	'GLX_HYPERPIPE_DISPLAY_PIPE_SGIX',
	'GLX_HYPERPIPE_ID_SGIX',
	'GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX',
	'GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX',
	'GLX_HYPERPIPE_RENDER_PIPE_SGIX',
	'GLX_HYPERPIPE_STEREO_SGIX',
	'GLX_PIPE_RECT_LIMITS_SGIX',
	'GLX_PIPE_RECT_SGIX',
	'GLX_SGIX_hyperpipe',
	'glXBindHyperpipeSGIX',
	'glXDestroyHyperpipeConfigSGIX',
	'glXHyperpipeAttribSGIX',
	'glXHyperpipeConfigSGIX',
	'glXQueryHyperpipeAttribSGIX',
	'glXQueryHyperpipeBestAttribSGIX',
	'glXQueryHyperpipeConfigSGIX',
	'glXQueryHyperpipeNetworkSGIX']),

'GLX_SGIX_pbuffer': set([
	'GLXBufferClobberEventSGIX',
	'GLXDrawable',
	'GLXPbuffer',
	'GLXPbufferSGIX',
	'GLX_ACCUM_BUFFER_BIT_SGIX',
	'GLX_AUX_BUFFERS_BIT_SGIX',
	'GLX_BACK_LEFT_BUFFER_BIT_SGIX',
	'GLX_BACK_RIGHT_BUFFER_BIT_SGIX',
	'GLX_BUFFER_CLOBBER_MASK_SGIX',
	'GLX_DAMAGED_SGIX',
	'GLX_DEPTH_BUFFER_BIT_SGIX',
	'GLX_EVENT_MASK_SGIX',
	'GLX_FRONT_LEFT_BUFFER_BIT_SGIX',
	'GLX_FRONT_RIGHT_BUFFER_BIT_SGIX',
	'GLX_HEIGHT_SGIX',
	'GLX_LARGEST_PBUFFER_SGIX',
	'GLX_MAX_PBUFFER_HEIGHT_SGIX',
	'GLX_MAX_PBUFFER_PIXELS_SGIX',
	'GLX_MAX_PBUFFER_WIDTH_SGIX',
	'GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX',
	'GLX_OPTIMAL_PBUFFER_WIDTH_SGIX',
	'GLX_PBUFFER_BIT_SGIX',
	'GLX_PBUFFER_SGIX',
	'GLX_PRESERVED_CONTENTS_SGIX',
	'GLX_SAMPLE_BUFFERS_BIT_SGIX',
	'GLX_SAVED_SGIX',
	'GLX_SGIX_pbuffer',
	'GLX_STENCIL_BUFFER_BIT_SGIX',
	'GLX_WIDTH_SGIX',
	'GLX_WINDOW_SGIX',
	'glXCreateGLXPbufferSGIX',
	'glXDestroyGLXPbufferSGIX',
	'glXGetSelectedEventSGIX',
	'glXQueryGLXPbufferSGIX',
	'glXSelectEventSGIX']),

'GLX_SGIX_swap_barrier': set([
	'GLX_SGIX_swap_barrier',
	'glXBindSwapBarrierSGIX',
	'glXQueryMaxSwapBarriersSGIX']),

'GLX_SGIX_swap_group': set([
	'GLX_SGIX_swap_group',
	'glXJoinSwapGroupSGIX']),

'GLX_SGIX_video_resize': set([
	'GLX_SGIX_video_resize',
	'GLX_SYNC_FRAME_SGIX',
	'GLX_SYNC_SWAP_SGIX',
	'glXBindChannelToWindowSGIX',
	'glXChannelRectSGIX',
	'glXChannelRectSyncSGIX',
	'glXQueryChannelDeltasSGIX',
	'glXQueryChannelRectSGIX']),

'GLX_SGIX_visual_select_group': set([
	'GLX_SGIX_visual_select_group',
	'GLX_VISUAL_SELECT_GROUP_SGIX']),

'GLX_SGI_cushion': set([
	'GLX_SGI_cushion',
	'glXCushionSGI']),

'GLX_SGI_make_current_read': set([
	'GLXDrawable',
	'GLX_SGI_make_current_read',
	'glXGetCurrentReadDrawableSGI',
	'glXMakeCurrentReadSGI']),

'GLX_SGI_swap_control': set([
	'GLX_SGI_swap_control',
	'glXSwapIntervalSGI']),

'GLX_SGI_video_sync': set([
	'GLX_SGI_video_sync',
	'glXGetVideoSyncSGI',
	'glXWaitVideoSyncSGI']),

'GLX_SUN_get_transparent_index': set([
	'GLX_SUN_get_transparent_index',
	'glXGetTransparentIndexSUN']),

'GLX_SUN_video_resize': set([
	'GLX_SUN_video_resize',
	'GLX_VIDEO_RESIZE_SUN',
	'GL_VIDEO_RESIZE_COMPENSATION_SUN',
	'glXGetVideoResizeSUN',
	'glXVideoResizeSUN']),

'GLX_VERSION_1_1': set([
	'GLXBadContext',
	'GLXBadContextState',
	'GLXBadContextTag',
	'GLXBadCurrentDrawable',
	'GLXBadCurrentWindow',
	'GLXBadDrawable',
	'GLXBadFBConfig',
	'GLXBadLargeRequest',
	'GLXBadPbuffer',
	'GLXBadPixmap',
	'GLXBadRenderRequest',
	'GLXBadWindow',
	'GLXContext',
	'GLXDrawable',
	'GLXPbufferClobberEvent',
	'GLXPixmap',
	'GLXRender',
	'GLXUnsupportedPrivateRequest',
	'GLX_ACCUM_ALPHA_SIZE',
	'GLX_ACCUM_BLUE_SIZE',
	'GLX_ACCUM_GREEN_SIZE',
	'GLX_ACCUM_RED_SIZE',
	'GLX_ALPHA_SIZE',
	'GLX_AUX_BUFFERS',
	'GLX_BAD_ATTRIBUTE',
	'GLX_BAD_SCREEN',
	'GLX_BAD_VALUE',
	'GLX_BAD_VISUAL',
	'GLX_BLUE_SIZE',
	'GLX_BUFFER_SIZE',
	'GLX_DEPTH_SIZE',
	'GLX_DOUBLEBUFFER',
	'GLX_DOUBLE_BUFFER',
	'GLX_EXTENSIONS',
	'GLX_GREEN_SIZE',
	'GLX_LEVEL',
	'GLX_NEW_DEFINITION_SGI',
	'GLX_NO_EXTENSION',
	'GLX_RED_SIZE',
	'GLX_RGBA',
	'GLX_STENCIL_BITS',
	'GLX_STENCIL_SIZE',
	'GLX_STEREO',
	'GLX_USE_GL',
	'GLX_VENDOR',
	'GLX_VERSION',
	'GLX_VERSION_1_1',
	'glXChooseVisual',
	'glXCopyContext',
	'glXCreateContext',
	'glXCreateGLXPixmap',
	'glXDestroyContext',
	'glXDestroyGLXPixmap',
	'glXGetClientString',
	'glXGetConfig',
	'glXGetCurrentContext',
	'glXGetCurrentDrawable',
	'glXIsDirect',
	'glXMakeCurrent',
	'glXNewCommandSGI',
	'glXQueryExtension',
	'glXQueryExtensionsString',
	'glXQueryServerString',
	'glXQueryVersion',
	'glXSwapBuffers',
	'glXUseXFont',
	'glXWaitGL',
	'glXWaitX']),

'GLX_VERSION_1_2': set([
	'GLX_VERSION_1_2',
	'glXGetCurrentDisplay']),

'GLX_VERSION_1_3': set([
	'GLXEvent',
	'GLXFBConfig',
	'GLXFBConfigID',
	'GLXPbuffer',
	'GLXPbufferClobberEvent',
	'GLXWindow',
	'GLX_ACCUM_BUFFER_BIT',
	'GLX_AUX_BUFFERS_BIT',
	'GLX_BACK_LEFT_BUFFER_BIT',
	'GLX_BACK_RIGHT_BUFFER_BIT',
	'GLX_COLOR_INDEX_BIT',
	'GLX_COLOR_INDEX_TYPE',
	'GLX_CONFIG_CAVEAT',
	'GLX_DAMAGED',
	'GLX_DEPTH_BUFFER_BIT',
	'GLX_DIRECT_COLOR',
	'GLX_DONT_CARE',
	'GLX_DRAWABLE_TYPE',
	'GLX_EVENT_MASK',
	'GLX_FBCONFIG_ID',
	'GLX_FRONT_LEFT_BUFFER_BIT',
	'GLX_FRONT_RIGHT_BUFFER_BIT',
	'GLX_GRAY_SCALE',
	'GLX_HEIGHT',
	'GLX_LARGEST_PBUFFER',
	'GLX_MAX_PBUFFER_HEIGHT',
	'GLX_MAX_PBUFFER_PIXELS',
	'GLX_MAX_PBUFFER_WIDTH',
	'GLX_NONE',
	'GLX_NON_CONFORMANT_CONFIG',
	'GLX_PBUFFER',
	'GLX_PBUFFER_BIT',
	'GLX_PBUFFER_CLOBBER_MASK',
	'GLX_PBUFFER_HEIGHT',
	'GLX_PBUFFER_WIDTH',
	'GLX_PIXMAP_BIT',
	'GLX_PRESERVED_CONTENTS',
	'GLX_PSEUDO_COLOR',
	'GLX_RENDER_TYPE',
	'GLX_RGBA_BIT',
	'GLX_RGBA_TYPE',
	'GLX_SAVED',
	'GLX_SCREEN',
	'GLX_SLOW_CONFIG',
	'GLX_STATIC_COLOR',
	'GLX_STATIC_GRAY',
	'GLX_STENCIL_BUFFER_BIT',
	'GLX_TRANSPARENT_ALPHA_VALUE',
	'GLX_TRANSPARENT_BLUE_VALUE',
	'GLX_TRANSPARENT_GREEN_VALUE',
	'GLX_TRANSPARENT_INDEX',
	'GLX_TRANSPARENT_INDEX_VALUE',
	'GLX_TRANSPARENT_RED_VALUE',
	'GLX_TRANSPARENT_RGB',
	'GLX_TRANSPARENT_TYPE',
	'GLX_TRUE_COLOR',
	'GLX_VERSION_1_3',
	'GLX_VISUAL_ID',
	'GLX_WIDTH',
	'GLX_WINDOW',
	'GLX_WINDOW_BIT',
	'GLX_X_RENDERABLE',
	'GLX_X_VISUAL_TYPE',
	'glXChooseFBConfig',
	'glXCreateNewContext',
	'glXCreatePbuffer',
	'glXCreatePixmap',
	'glXCreateWindow',
	'glXDestroyPbuffer',
	'glXDestroyPixmap',
	'glXDestroyWindow',
	'glXGetCurrentReadDrawable',
	'glXGetFBConfigAttrib',
	'glXGetFBConfigs',
	'glXGetSelectedEvent',
	'glXGetVisualFromFBConfig',
	'glXMakeContextCurrent',
	'glXQueryContext',
	'glXQueryDrawable',
	'glXSelectEvent']),

'GLX_VERSION_1_4': set([
	'GLX_SAMPLES',
	'GLX_SAMPLE_BUFFERS',
	'GLX_VERSION_1_4',
	'glXGetProcAddress']),

'WGL': set([
	'wglCopyContext',
	'wglCreateContext',
	'wglDeleteContext',
	'wglGetCurrentDC',
	'wglGetProcAddress',
	'wglMakeCurrent',
	'wglShareLists']),

'WGL_3DFX_multisample': set([
	'WGL_3DFX_multisample',
	'WGL_SAMPLES_3DFX',
	'WGL_SAMPLE_BUFFERS_3DFX']),

'WGL_3DL_stereo_control': set([
	'WGL_3DL_stereo_control',
	'WGL_STEREO_EMITTER_DISABLE_3DL',
	'WGL_STEREO_EMITTER_ENABLE_3DL',
	'WGL_STEREO_POLARITY_INVERT_3DL',
	'WGL_STEREO_POLARITY_NORMAL_3DL',
	'wglSetStereoEmitterState3DL']),

'WGL_AMD_gpu_association': set([
	'WGL_AMD_gpu_association',
	'WGL_GPU_CLOCK_AMD',
	'WGL_GPU_FASTEST_TARGET_GPUS_AMD',
	'WGL_GPU_NUM_PIPES_AMD',
	'WGL_GPU_NUM_RB_AMD',
	'WGL_GPU_NUM_SIMD_AMD',
	'WGL_GPU_NUM_SPI_AMD',
	'WGL_GPU_OPENGL_VERSION_STRING_AMD',
	'WGL_GPU_RAM_AMD',
	'WGL_GPU_RENDERER_STRING_AMD',
	'WGL_GPU_VENDOR_AMD',
	'wglBlitContextFramebufferAMD',
	'wglCreateAssociatedContextAMD',
	'wglCreateAssociatedContextAttribsAMD',
	'wglDeleteAssociatedContextAMD',
	'wglGetContextGPUIDAMD',
	'wglGetCurrentAssociatedContextAMD',
	'wglGetGPUIDsAMD',
	'wglGetGPUInfoAMD',
	'wglMakeAssociatedContextCurrentAMD']),

'WGL_ARB_buffer_region': set([
	'WGL_ARB_buffer_region',
	'WGL_BACK_COLOR_BUFFER_BIT_ARB',
	'WGL_DEPTH_BUFFER_BIT_ARB',
	'WGL_FRONT_COLOR_BUFFER_BIT_ARB',
	'WGL_STENCIL_BUFFER_BIT_ARB',
	'wglCreateBufferRegionARB',
	'wglDeleteBufferRegionARB',
	'wglRestoreBufferRegionARB',
	'wglSaveBufferRegionARB']),

'WGL_ARB_create_context': set([
	'WGL_ARB_create_context',
	'WGL_CONTEXT_DEBUG_BIT_ARB',
	'WGL_CONTEXT_FLAGS_ARB',
	'WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB',
	'WGL_CONTEXT_LAYER_PLANE_ARB',
	'WGL_CONTEXT_MAJOR_VERSION_ARB',
	'WGL_CONTEXT_MINOR_VERSION_ARB',
	'wglCreateContextAttribsARB']),

'WGL_ARB_create_context_profile': set([
	'WGL_ARB_create_context_profile',
	'WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB',
	'WGL_CONTEXT_CORE_PROFILE_BIT_ARB',
	'WGL_CONTEXT_PROFILE_MASK_ARB']),

'WGL_ARB_create_context_robustness': set([
	'WGL_ARB_create_context_robustness',
	'WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB',
	'WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB',
	'WGL_LOSE_CONTEXT_ON_RESET_ARB',
	'WGL_NO_RESET_NOTIFICATION_ARB']),

'WGL_ARB_extensions_string': set([
	'WGL_ARB_extensions_string',
	'wglGetExtensionsStringARB']),

'WGL_ARB_framebuffer_sRGB': set([
	'WGL_ARB_framebuffer_sRGB',
	'WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB']),

'WGL_ARB_make_current_read': set([
	'WGL_ARB_make_current_read',
	'wglGetCurrentReadDCARB',
	'wglMakeContextCurrentARB']),

'WGL_ARB_multisample': set([
	'WGL_ARB_multisample',
	'WGL_SAMPLES_ARB',
	'WGL_SAMPLE_BUFFERS_ARB']),

'WGL_ARB_pbuffer': set([
	'WGL_ARB_pbuffer',
	'WGL_DRAW_TO_PBUFFER_ARB',
	'WGL_MAX_PBUFFER_HEIGHT_ARB',
	'WGL_MAX_PBUFFER_PIXELS_ARB',
	'WGL_MAX_PBUFFER_WIDTH_ARB',
	'WGL_PBUFFER_HEIGHT_ARB',
	'WGL_PBUFFER_LARGEST_ARB',
	'WGL_PBUFFER_LOST_ARB',
	'WGL_PBUFFER_WIDTH_ARB',
	'wglCreatePbufferARB',
	'wglDestroyPbufferARB',
	'wglGetPbufferDCARB',
	'wglQueryPbufferARB',
	'wglReleasePbufferDCARB']),

'WGL_ARB_pixel_format': set([
	'WGL_ACCELERATION_ARB',
	'WGL_ACCUM_ALPHA_BITS_ARB',
	'WGL_ACCUM_BITS_ARB',
	'WGL_ACCUM_BLUE_BITS_ARB',
	'WGL_ACCUM_GREEN_BITS_ARB',
	'WGL_ACCUM_RED_BITS_ARB',
	'WGL_ALPHA_BITS_ARB',
	'WGL_ALPHA_SHIFT_ARB',
	'WGL_ARB_pixel_format',
	'WGL_AUX_BUFFERS_ARB',
	'WGL_BLUE_BITS_ARB',
	'WGL_BLUE_SHIFT_ARB',
	'WGL_COLOR_BITS_ARB',
	'WGL_DEPTH_BITS_ARB',
	'WGL_DOUBLE_BUFFER_ARB',
	'WGL_DRAW_TO_BITMAP_ARB',
	'WGL_DRAW_TO_WINDOW_ARB',
	'WGL_FULL_ACCELERATION_ARB',
	'WGL_GENERIC_ACCELERATION_ARB',
	'WGL_GREEN_BITS_ARB',
	'WGL_GREEN_SHIFT_ARB',
	'WGL_NEED_PALETTE_ARB',
	'WGL_NEED_SYSTEM_PALETTE_ARB',
	'WGL_NO_ACCELERATION_ARB',
	'WGL_NUMBER_OVERLAYS_ARB',
	'WGL_NUMBER_PIXEL_FORMATS_ARB',
	'WGL_NUMBER_UNDERLAYS_ARB',
	'WGL_PIXEL_TYPE_ARB',
	'WGL_RED_BITS_ARB',
	'WGL_RED_SHIFT_ARB',
	'WGL_SHARE_ACCUM_ARB',
	'WGL_SHARE_DEPTH_ARB',
	'WGL_SHARE_STENCIL_ARB',
	'WGL_STENCIL_BITS_ARB',
	'WGL_STEREO_ARB',
	'WGL_SUPPORT_GDI_ARB',
	'WGL_SUPPORT_OPENGL_ARB',
	'WGL_SWAP_COPY_ARB',
	'WGL_SWAP_EXCHANGE_ARB',
	'WGL_SWAP_LAYER_BUFFERS_ARB',
	'WGL_SWAP_METHOD_ARB',
	'WGL_SWAP_UNDEFINED_ARB',
	'WGL_TRANSPARENT_ALPHA_VALUE_ARB',
	'WGL_TRANSPARENT_ARB',
	'WGL_TRANSPARENT_BLUE_VALUE_ARB',
	'WGL_TRANSPARENT_GREEN_VALUE_ARB',
	'WGL_TRANSPARENT_INDEX_VALUE_ARB',
	'WGL_TRANSPARENT_RED_VALUE_ARB',
	'WGL_TYPE_COLORINDEX_ARB',
	'WGL_TYPE_RGBA_ARB',
	'wglChoosePixelFormatARB',
	'wglGetPixelFormatAttribfvARB',
	'wglGetPixelFormatAttribivARB']),

'WGL_ARB_pixel_format_float': set([
	'WGL_ARB_pixel_format_float',
	'WGL_TYPE_RGBA_FLOAT_ARB']),

'WGL_ARB_render_texture': set([
	'WGL_ARB_render_texture',
	'WGL_AUX0_ARB',
	'WGL_AUX1_ARB',
	'WGL_AUX2_ARB',
	'WGL_AUX3_ARB',
	'WGL_AUX4_ARB',
	'WGL_AUX5_ARB',
	'WGL_AUX6_ARB',
	'WGL_AUX7_ARB',
	'WGL_AUX8_ARB',
	'WGL_AUX9_ARB',
	'WGL_BACK_LEFT_ARB',
	'WGL_BACK_RIGHT_ARB',
	'WGL_BIND_TO_TEXTURE_RGBA_ARB',
	'WGL_BIND_TO_TEXTURE_RGB_ARB',
	'WGL_CUBE_MAP_FACE_ARB',
	'WGL_FRONT_LEFT_ARB',
	'WGL_FRONT_RIGHT_ARB',
	'WGL_MIPMAP_LEVEL_ARB',
	'WGL_MIPMAP_TEXTURE_ARB',
	'WGL_NO_TEXTURE_ARB',
	'WGL_TEXTURE_1D_ARB',
	'WGL_TEXTURE_2D_ARB',
	'WGL_TEXTURE_CUBE_MAP_ARB',
	'WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB',
	'WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB',
	'WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB',
	'WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB',
	'WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB',
	'WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB',
	'WGL_TEXTURE_FORMAT_ARB',
	'WGL_TEXTURE_RGBA_ARB',
	'WGL_TEXTURE_RGB_ARB',
	'WGL_TEXTURE_TARGET_ARB',
	'wglBindTexImageARB',
	'wglReleaseTexImageARB',
	'wglSetPbufferAttribARB']),

'WGL_ATI_pixel_format_float': set([
	'GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI',
	'GL_RGBA_FLOAT_MODE_ATI',
	'WGL_ATI_pixel_format_float',
	'WGL_TYPE_RGBA_FLOAT_ATI']),

'WGL_ATI_render_texture_rectangle': set([
	'WGL_ATI_render_texture_rectangle',
	'WGL_TEXTURE_RECTANGLE_ATI']),

'WGL_EXT_create_context_es2_profile': set([
	'WGL_CONTEXT_ES2_PROFILE_BIT_EXT',
	'WGL_EXT_create_context_es2_profile']),

'WGL_EXT_depth_float': set([
	'WGL_DEPTH_FLOAT_EXT',
	'WGL_EXT_depth_float']),

'WGL_EXT_display_color_table': set([
	'WGL_EXT_display_color_table',
	'wglBindDisplayColorTableEXT',
	'wglCreateDisplayColorTableEXT',
	'wglDestroyDisplayColorTableEXT',
	'wglLoadDisplayColorTableEXT']),

'WGL_EXT_extensions_string': set([
	'WGL_EXT_extensions_string',
	'wglGetExtensionsStringEXT']),

'WGL_EXT_framebuffer_sRGB': set([
	'WGL_EXT_framebuffer_sRGB',
	'WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT']),

'WGL_EXT_make_current_read': set([
	'WGL_EXT_make_current_read',
	'wglGetCurrentReadDCEXT',
	'wglMakeContextCurrentEXT']),

'WGL_EXT_multisample': set([
	'WGL_EXT_multisample',
	'WGL_SAMPLES_EXT',
	'WGL_SAMPLE_BUFFERS_EXT']),

'WGL_EXT_pbuffer': set([
	'WGL_DRAW_TO_PBUFFER_EXT',
	'WGL_EXT_pbuffer',
	'WGL_MAX_PBUFFER_HEIGHT_EXT',
	'WGL_MAX_PBUFFER_PIXELS_EXT',
	'WGL_MAX_PBUFFER_WIDTH_EXT',
	'WGL_OPTIMAL_PBUFFER_HEIGHT_EXT',
	'WGL_OPTIMAL_PBUFFER_WIDTH_EXT',
	'WGL_PBUFFER_HEIGHT_EXT',
	'WGL_PBUFFER_LARGEST_EXT',
	'WGL_PBUFFER_WIDTH_EXT',
	'wglCreatePbufferEXT',
	'wglDestroyPbufferEXT',
	'wglGetPbufferDCEXT',
	'wglQueryPbufferEXT',
	'wglReleasePbufferDCEXT']),

'WGL_EXT_pixel_format': set([
	'WGL_ACCELERATION_EXT',
	'WGL_ACCUM_ALPHA_BITS_EXT',
	'WGL_ACCUM_BITS_EXT',
	'WGL_ACCUM_BLUE_BITS_EXT',
	'WGL_ACCUM_GREEN_BITS_EXT',
	'WGL_ACCUM_RED_BITS_EXT',
	'WGL_ALPHA_BITS_EXT',
	'WGL_ALPHA_SHIFT_EXT',
	'WGL_AUX_BUFFERS_EXT',
	'WGL_BLUE_BITS_EXT',
	'WGL_BLUE_SHIFT_EXT',
	'WGL_COLOR_BITS_EXT',
	'WGL_DEPTH_BITS_EXT',
	'WGL_DOUBLE_BUFFER_EXT',
	'WGL_DRAW_TO_BITMAP_EXT',
	'WGL_DRAW_TO_WINDOW_EXT',
	'WGL_EXT_pixel_format',
	'WGL_FULL_ACCELERATION_EXT',
	'WGL_GENERIC_ACCELERATION_EXT',
	'WGL_GREEN_BITS_EXT',
	'WGL_GREEN_SHIFT_EXT',
	'WGL_NEED_PALETTE_EXT',
	'WGL_NEED_SYSTEM_PALETTE_EXT',
	'WGL_NO_ACCELERATION_EXT',
	'WGL_NUMBER_OVERLAYS_EXT',
	'WGL_NUMBER_PIXEL_FORMATS_EXT',
	'WGL_NUMBER_UNDERLAYS_EXT',
	'WGL_PIXEL_TYPE_EXT',
	'WGL_RED_BITS_EXT',
	'WGL_RED_SHIFT_EXT',
	'WGL_SHARE_ACCUM_EXT',
	'WGL_SHARE_DEPTH_EXT',
	'WGL_SHARE_STENCIL_EXT',
	'WGL_STENCIL_BITS_EXT',
	'WGL_STEREO_EXT',
	'WGL_SUPPORT_GDI_EXT',
	'WGL_SUPPORT_OPENGL_EXT',
	'WGL_SWAP_COPY_EXT',
	'WGL_SWAP_EXCHANGE_EXT',
	'WGL_SWAP_LAYER_BUFFERS_EXT',
	'WGL_SWAP_METHOD_EXT',
	'WGL_SWAP_UNDEFINED_EXT',
	'WGL_TRANSPARENT_EXT',
	'WGL_TRANSPARENT_VALUE_EXT',
	'WGL_TYPE_COLORINDEX_EXT',
	'WGL_TYPE_RGBA_EXT',
	'wglChoosePixelFormatEXT',
	'wglGetPixelFormatAttribfvEXT',
	'wglGetPixelFormatAttribivEXT']),

'WGL_EXT_pixel_format_packed_float': set([
	'WGL_EXT_pixel_format_packed_float',
	'WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT']),

'WGL_EXT_swap_control': set([
	'WGL_EXT_swap_control',
	'wglGetSwapIntervalEXT',
	'wglSwapIntervalEXT']),

'WGL_I3D_digital_video_control': set([
	'WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D',
	'WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D',
	'WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D',
	'WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D',
	'WGL_I3D_digital_video_control',
	'wglGetDigitalVideoParametersI3D',
	'wglSetDigitalVideoParametersI3D']),

'WGL_I3D_gamma': set([
	'WGL_GAMMA_EXCLUDE_DESKTOP_I3D',
	'WGL_GAMMA_TABLE_SIZE_I3D',
	'WGL_I3D_gamma',
	'wglGetGammaTableI3D',
	'wglGetGammaTableParametersI3D',
	'wglSetGammaTableI3D',
	'wglSetGammaTableParametersI3D']),

'WGL_I3D_genlock': set([
	'WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D',
	'WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D',
	'WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D',
	'WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D',
	'WGL_GENLOCK_SOURCE_EDGE_RISING_I3D',
	'WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D',
	'WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D',
	'WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D',
	'WGL_GENLOCK_SOURCE_MULTIVIEW_I3D',
	'WGL_I3D_genlock',
	'wglDisableGenlockI3D',
	'wglEnableGenlockI3D',
	'wglGenlockSampleRateI3D',
	'wglGenlockSourceDelayI3D',
	'wglGenlockSourceEdgeI3D',
	'wglGenlockSourceI3D',
	'wglGetGenlockSampleRateI3D',
	'wglGetGenlockSourceDelayI3D',
	'wglGetGenlockSourceEdgeI3D',
	'wglGetGenlockSourceI3D',
	'wglIsEnabledGenlockI3D',
	'wglQueryGenlockMaxSourceDelayI3D']),

'WGL_I3D_image_buffer': set([
	'WGL_I3D_image_buffer',
	'WGL_IMAGE_BUFFER_LOCK_I3D',
	'WGL_IMAGE_BUFFER_MIN_ACCESS_I3D',
	'wglAssociateImageBufferEventsI3D',
	'wglDestroyImageBufferI3D',
	'wglReleaseImageBufferEventsI3D']),

'WGL_I3D_swap_frame_lock': set([
	'WGL_I3D_swap_frame_lock',
	'wglDisableFrameLockI3D',
	'wglEnableFrameLockI3D',
	'wglIsEnabledFrameLockI3D',
	'wglQueryFrameLockMasterI3D']),

'WGL_I3D_swap_frame_usage': set([
	'WGL_I3D_swap_frame_usage',
	'wglBeginFrameTrackingI3D',
	'wglEndFrameTrackingI3D',
	'wglGetFrameUsageI3D',
	'wglQueryFrameTrackingI3D']),

'WGL_NV_copy_image': set([
	'WGL_NV_copy_image',
	'wglCopyImageSubDataNV']),

'WGL_NV_DX_interop': set([
	'WGL_ACCESS_READ_ONLY_NV',
	'WGL_ACCESS_READ_WRITE_NV',
	'WGL_ACCESS_WRITE_DISCARD_NV',
	'WGL_NV_DX_interop',
	'wglDXCloseDeviceNV',
	'wglDXLockObjectsNV',
	'wglDXObjectAccessNV',
	'wglDXOpenDeviceNV',
	'wglDXRegisterObjectNV',
	'wglDXSetResourceShareHandleNV',
	'wglDXUnlockObjectsNV',
	'wglDXUnregisterObjectNV']),

'WGL_NV_float_buffer': set([
	'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV',
	'WGL_FLOAT_COMPONENTS_NV',
	'WGL_NV_float_buffer',
	'WGL_TEXTURE_FLOAT_RGBA_NV',
	'WGL_TEXTURE_FLOAT_RGB_NV',
	'WGL_TEXTURE_FLOAT_RG_NV',
	'WGL_TEXTURE_FLOAT_R_NV']),

'WGL_NV_gpu_affinity': set([
	'WGL_ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV',
	'WGL_ERROR_MISSING_AFFINITY_MASK_NV',
	'WGL_NV_gpu_affinity',
	'wglCreateAffinityDCNV',
	'wglDeleteDCNV',
	'wglEnumGpuDevicesNV',
	'wglEnumGpusFromAffinityDCNV',
	'wglEnumGpusNV']),

'WGL_NV_multisample_coverage': set([
	'WGL_COLOR_SAMPLES_NV',
	'WGL_COVERAGE_SAMPLES_NV',
	'WGL_NV_multisample_coverage']),

'WGL_NV_present_video': set([
	'WGL_NUM_VIDEO_SLOTS_NV',
	'WGL_NV_present_video',
	'wglBindVideoDeviceNV',
	'wglEnumerateVideoDevicesNV',
	'wglQueryCurrentContextNV']),

'WGL_NV_render_depth_texture': set([
	'WGL_BIND_TO_TEXTURE_DEPTH_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV',
	'WGL_DEPTH_COMPONENT_NV',
	'WGL_DEPTH_TEXTURE_FORMAT_NV',
	'WGL_NO_TEXTURE_ARB',
	'WGL_NV_render_depth_texture',
	'WGL_TEXTURE_DEPTH_COMPONENT_NV']),

'WGL_NV_render_texture_rectangle': set([
	'WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV',
	'WGL_NV_render_texture_rectangle',
	'WGL_TEXTURE_RECTANGLE_NV']),

'WGL_NV_swap_group': set([
	'WGL_NV_swap_group',
	'wglBindSwapBarrierNV',
	'wglJoinSwapGroupNV',
	'wglQueryFrameCountNV',
	'wglQueryMaxSwapGroupsNV',
	'wglQuerySwapGroupNV',
	'wglResetFrameCountNV']),

'WGL_NV_vertex_array_range': set([
	'WGL_NV_vertex_array_range',
	'wglAllocateMemoryNV',
	'wglFreeMemoryNV']),

'WGL_NV_video_capture': set([
	'WGL_NUM_VIDEO_CAPTURE_SLOTS_NV',
	'WGL_NV_video_capture',
	'WGL_UNIQUE_ID_NV',
	'wglBindVideoCaptureDeviceNV',
	'wglEnumerateVideoCaptureDevicesNV',
	'wglLockVideoCaptureDeviceNV',
	'wglQueryVideoCaptureDeviceNV',
	'wglReleaseVideoCaptureDeviceNV']),

'WGL_NV_video_output': set([
	'WGL_BIND_TO_VIDEO_RGBA_NV',
	'WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV',
	'WGL_BIND_TO_VIDEO_RGB_NV',
	'WGL_NV_video_output',
	'WGL_VIDEO_OUT_ALPHA_NV',
	'WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV',
	'WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV',
	'WGL_VIDEO_OUT_COLOR_NV',
	'WGL_VIDEO_OUT_DEPTH_NV',
	'WGL_VIDEO_OUT_FIELD_1',
	'WGL_VIDEO_OUT_FIELD_2',
	'WGL_VIDEO_OUT_FRAME',
	'WGL_VIDEO_OUT_STACKED_FIELDS_1_2',
	'WGL_VIDEO_OUT_STACKED_FIELDS_2_1',
	'wglBindVideoImageNV',
	'wglGetVideoDeviceNV',
	'wglGetVideoInfoNV',
	'wglReleaseVideoDeviceNV',
	'wglReleaseVideoImageNV',
	'wglSendPbufferToVideoNV']),

'WGL_OML_sync_control': set([
	'WGL_OML_sync_control',
	'wglGetMscRateOML',
	'wglGetSyncValuesOML',
	'wglSwapBuffersMscOML',
	'wglSwapLayerBuffersMscOML',
	'wglWaitForMscOML',
	'wglWaitForSbcOML']),

