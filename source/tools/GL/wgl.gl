'WGL': set([
    'wglCopyContext',
    'wglCreateContext',
    'wglCreateLayerContext',
    'wglDeleteContext',
    'wglDescribeLayerPlane',
    'wglGetCurrentContext',
    'wglGetCurrentDC',
    'wglGetLayerPaletteEntries',
    'wglGetProcAddress',
    'wglMakeCurrent',
    'wglRealizeLayerPalette',
    'wglSetLayerPaletteEntries',
    'wglShareLists',
    'wglSwapLayerBuffers',
    'wglUseFontBitmaps',
    'wglUseFontOutlines']),

'WGL_WIN32': set([
	'DescribePixelFormat',
	'GLYPHMETRICSFLOAT',
	'GetEnhMetaFilePixelFormat',
	'GetPixelFormat',
	'LAYERPLANEDESCRIPTOR',
	'PIXELFORMATDESCRIPTOR',
	'POINTFLOAT',
	'SetPixelFormat',
	'SwapBuffers',
    'ChoosePixelFormat']),

'WGL_MINIDRIVER': set([
	'wglDescribePixelFormat',
	'wglGetEnhMetaFilePixelFormat',
	'wglGetPixelFormat',
	'wglSetPixelFormat',
	'wglSwapBuffers',
    'wglChoosePixelFormat']),

'WGL_3DFX_multisample': set([
	'WGL_3DFX_multisample',
	'WGL_SAMPLES_3DFX',
	'WGL_SAMPLE_BUFFERS_3DFX']),

'WGL_3DL_stereo_control': set([
	'WGL_3DL_stereo_control',
	'WGL_STEREO_EMITTER_DISABLE_3DL',
	'WGL_STEREO_EMITTER_ENABLE_3DL',
	'WGL_STEREO_POLARITY_INVERT_3DL',
	'WGL_STEREO_POLARITY_NORMAL_3DL',
	'wglSetStereoEmitterState3DL']),

'WGL_AMD_gpu_association': set([
	'WGL_AMD_gpu_association',
	'WGL_GPU_CLOCK_AMD',
	'WGL_GPU_FASTEST_TARGET_GPUS_AMD',
	'WGL_GPU_NUM_PIPES_AMD',
	'WGL_GPU_NUM_RB_AMD',
	'WGL_GPU_NUM_SIMD_AMD',
	'WGL_GPU_NUM_SPI_AMD',
	'WGL_GPU_OPENGL_VERSION_STRING_AMD',
	'WGL_GPU_RAM_AMD',
	'WGL_GPU_RENDERER_STRING_AMD',
	'WGL_GPU_VENDOR_AMD',
	'wglBlitContextFramebufferAMD',
	'wglCreateAssociatedContextAMD',
	'wglCreateAssociatedContextAttribsAMD',
	'wglDeleteAssociatedContextAMD',
	'wglGetContextGPUIDAMD',
	'wglGetCurrentAssociatedContextAMD',
	'wglGetGPUIDsAMD',
	'wglGetGPUInfoAMD',
	'wglMakeAssociatedContextCurrentAMD']),

'WGL_ARB_buffer_region': set([
	'WGL_ARB_buffer_region',
	'WGL_BACK_COLOR_BUFFER_BIT_ARB',
	'WGL_DEPTH_BUFFER_BIT_ARB',
	'WGL_FRONT_COLOR_BUFFER_BIT_ARB',
	'WGL_STENCIL_BUFFER_BIT_ARB',
	'wglCreateBufferRegionARB',
	'wglDeleteBufferRegionARB',
	'wglRestoreBufferRegionARB',
	'wglSaveBufferRegionARB']),

'WGL_ARB_create_context': set([
	'WGL_ARB_create_context',
	'WGL_CONTEXT_DEBUG_BIT_ARB',
	'WGL_CONTEXT_FLAGS_ARB',
	'WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB',
	'WGL_CONTEXT_LAYER_PLANE_ARB',
	'WGL_CONTEXT_MAJOR_VERSION_ARB',
	'WGL_CONTEXT_MINOR_VERSION_ARB',
	'wglCreateContextAttribsARB']),

'WGL_ARB_create_context_profile': set([
	'WGL_ARB_create_context_profile',
	'WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB',
	'WGL_CONTEXT_CORE_PROFILE_BIT_ARB',
	'WGL_CONTEXT_PROFILE_MASK_ARB']),

'WGL_ARB_create_context_robustness': set([
	'WGL_ARB_create_context_robustness',
	'WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB',
	'WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB',
	'WGL_LOSE_CONTEXT_ON_RESET_ARB',
	'WGL_NO_RESET_NOTIFICATION_ARB']),

'WGL_ARB_extensions_string': set([
	'WGL_ARB_extensions_string',
	'wglGetExtensionsStringARB']),

'WGL_ARB_framebuffer_sRGB': set([
	'WGL_ARB_framebuffer_sRGB',
	'WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB']),

'WGL_ARB_make_current_read': set([
	'WGL_ARB_make_current_read',
	'wglGetCurrentReadDCARB',
	'wglMakeContextCurrentARB']),

'WGL_ARB_multisample': set([
	'WGL_ARB_multisample',
	'WGL_SAMPLES_ARB',
	'WGL_SAMPLE_BUFFERS_ARB']),

'WGL_ARB_pbuffer': set([
	'WGL_ARB_pbuffer',
	'WGL_DRAW_TO_PBUFFER_ARB',
	'WGL_MAX_PBUFFER_HEIGHT_ARB',
	'WGL_MAX_PBUFFER_PIXELS_ARB',
	'WGL_MAX_PBUFFER_WIDTH_ARB',
	'WGL_PBUFFER_HEIGHT_ARB',
	'WGL_PBUFFER_LARGEST_ARB',
	'WGL_PBUFFER_LOST_ARB',
	'WGL_PBUFFER_WIDTH_ARB',
	'wglCreatePbufferARB',
	'wglDestroyPbufferARB',
	'wglGetPbufferDCARB',
	'wglQueryPbufferARB',
	'wglReleasePbufferDCARB']),

'WGL_ARB_pixel_format': set([
	'WGL_ACCELERATION_ARB',
	'WGL_ACCUM_ALPHA_BITS_ARB',
	'WGL_ACCUM_BITS_ARB',
	'WGL_ACCUM_BLUE_BITS_ARB',
	'WGL_ACCUM_GREEN_BITS_ARB',
	'WGL_ACCUM_RED_BITS_ARB',
	'WGL_ALPHA_BITS_ARB',
	'WGL_ALPHA_SHIFT_ARB',
	'WGL_ARB_pixel_format',
	'WGL_AUX_BUFFERS_ARB',
	'WGL_BLUE_BITS_ARB',
	'WGL_BLUE_SHIFT_ARB',
	'WGL_COLOR_BITS_ARB',
	'WGL_DEPTH_BITS_ARB',
	'WGL_DOUBLE_BUFFER_ARB',
	'WGL_DRAW_TO_BITMAP_ARB',
	'WGL_DRAW_TO_WINDOW_ARB',
	'WGL_FULL_ACCELERATION_ARB',
	'WGL_GENERIC_ACCELERATION_ARB',
	'WGL_GREEN_BITS_ARB',
	'WGL_GREEN_SHIFT_ARB',
	'WGL_NEED_PALETTE_ARB',
	'WGL_NEED_SYSTEM_PALETTE_ARB',
	'WGL_NO_ACCELERATION_ARB',
	'WGL_NUMBER_OVERLAYS_ARB',
	'WGL_NUMBER_PIXEL_FORMATS_ARB',
	'WGL_NUMBER_UNDERLAYS_ARB',
	'WGL_PIXEL_TYPE_ARB',
	'WGL_RED_BITS_ARB',
	'WGL_RED_SHIFT_ARB',
	'WGL_SHARE_ACCUM_ARB',
	'WGL_SHARE_DEPTH_ARB',
	'WGL_SHARE_STENCIL_ARB',
	'WGL_STENCIL_BITS_ARB',
	'WGL_STEREO_ARB',
	'WGL_SUPPORT_GDI_ARB',
	'WGL_SUPPORT_OPENGL_ARB',
	'WGL_SWAP_COPY_ARB',
	'WGL_SWAP_EXCHANGE_ARB',
	'WGL_SWAP_LAYER_BUFFERS_ARB',
	'WGL_SWAP_METHOD_ARB',
	'WGL_SWAP_UNDEFINED_ARB',
	'WGL_TRANSPARENT_ALPHA_VALUE_ARB',
	'WGL_TRANSPARENT_ARB',
	'WGL_TRANSPARENT_BLUE_VALUE_ARB',
	'WGL_TRANSPARENT_GREEN_VALUE_ARB',
	'WGL_TRANSPARENT_INDEX_VALUE_ARB',
	'WGL_TRANSPARENT_RED_VALUE_ARB',
	'WGL_TYPE_COLORINDEX_ARB',
	'WGL_TYPE_RGBA_ARB',
	'wglChoosePixelFormatARB',
	'wglGetPixelFormatAttribfvARB',
	'wglGetPixelFormatAttribivARB']),

'WGL_ARB_pixel_format_float': set([
	'WGL_ARB_pixel_format_float',
	'WGL_TYPE_RGBA_FLOAT_ARB']),

'WGL_ARB_render_texture': set([
	'WGL_ARB_render_texture',
	'WGL_AUX0_ARB',
	'WGL_AUX1_ARB',
	'WGL_AUX2_ARB',
	'WGL_AUX3_ARB',
	'WGL_AUX4_ARB',
	'WGL_AUX5_ARB',
	'WGL_AUX6_ARB',
	'WGL_AUX7_ARB',
	'WGL_AUX8_ARB',
	'WGL_AUX9_ARB',
	'WGL_BACK_LEFT_ARB',
	'WGL_BACK_RIGHT_ARB',
	'WGL_BIND_TO_TEXTURE_RGBA_ARB',
	'WGL_BIND_TO_TEXTURE_RGB_ARB',
	'WGL_CUBE_MAP_FACE_ARB',
	'WGL_FRONT_LEFT_ARB',
	'WGL_FRONT_RIGHT_ARB',
	'WGL_MIPMAP_LEVEL_ARB',
	'WGL_MIPMAP_TEXTURE_ARB',
	'WGL_NO_TEXTURE_ARB',
	'WGL_TEXTURE_1D_ARB',
	'WGL_TEXTURE_2D_ARB',
	'WGL_TEXTURE_CUBE_MAP_ARB',
	'WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB',
	'WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB',
	'WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB',
	'WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB',
	'WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB',
	'WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB',
	'WGL_TEXTURE_FORMAT_ARB',
	'WGL_TEXTURE_RGBA_ARB',
	'WGL_TEXTURE_RGB_ARB',
	'WGL_TEXTURE_TARGET_ARB',
	'wglBindTexImageARB',
	'wglReleaseTexImageARB',
	'wglSetPbufferAttribARB']),

'WGL_ATI_pixel_format_float': set([
	'GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI',
	'GL_RGBA_FLOAT_MODE_ATI',
	'WGL_ATI_pixel_format_float',
	'WGL_TYPE_RGBA_FLOAT_ATI']),

'WGL_ATI_render_texture_rectangle': set([
	'WGL_ATI_render_texture_rectangle',
	'WGL_TEXTURE_RECTANGLE_ATI']),

'WGL_EXT_create_context_es2_profile': set([
	'WGL_CONTEXT_ES2_PROFILE_BIT_EXT',
	'WGL_EXT_create_context_es2_profile']),

'WGL_EXT_depth_float': set([
	'WGL_DEPTH_FLOAT_EXT',
	'WGL_EXT_depth_float']),

'WGL_EXT_display_color_table': set([
	'WGL_EXT_display_color_table',
	'wglBindDisplayColorTableEXT',
	'wglCreateDisplayColorTableEXT',
	'wglDestroyDisplayColorTableEXT',
	'wglLoadDisplayColorTableEXT']),

'WGL_EXT_extensions_string': set([
	'WGL_EXT_extensions_string',
	'wglGetExtensionsStringEXT']),

'WGL_EXT_framebuffer_sRGB': set([
	'WGL_EXT_framebuffer_sRGB',
	'WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT']),

'WGL_EXT_make_current_read': set([
	'WGL_EXT_make_current_read',
	'wglGetCurrentReadDCEXT',
	'wglMakeContextCurrentEXT']),

'WGL_EXT_multisample': set([
	'WGL_EXT_multisample',
	'WGL_SAMPLES_EXT',
	'WGL_SAMPLE_BUFFERS_EXT']),

'WGL_EXT_pbuffer': set([
	'WGL_DRAW_TO_PBUFFER_EXT',
	'WGL_EXT_pbuffer',
	'WGL_MAX_PBUFFER_HEIGHT_EXT',
	'WGL_MAX_PBUFFER_PIXELS_EXT',
	'WGL_MAX_PBUFFER_WIDTH_EXT',
	'WGL_OPTIMAL_PBUFFER_HEIGHT_EXT',
	'WGL_OPTIMAL_PBUFFER_WIDTH_EXT',
	'WGL_PBUFFER_HEIGHT_EXT',
	'WGL_PBUFFER_LARGEST_EXT',
	'WGL_PBUFFER_WIDTH_EXT',
	'wglCreatePbufferEXT',
	'wglDestroyPbufferEXT',
	'wglGetPbufferDCEXT',
	'wglQueryPbufferEXT',
	'wglReleasePbufferDCEXT']),

'WGL_EXT_pixel_format': set([
	'WGL_ACCELERATION_EXT',
	'WGL_ACCUM_ALPHA_BITS_EXT',
	'WGL_ACCUM_BITS_EXT',
	'WGL_ACCUM_BLUE_BITS_EXT',
	'WGL_ACCUM_GREEN_BITS_EXT',
	'WGL_ACCUM_RED_BITS_EXT',
	'WGL_ALPHA_BITS_EXT',
	'WGL_ALPHA_SHIFT_EXT',
	'WGL_AUX_BUFFERS_EXT',
	'WGL_BLUE_BITS_EXT',
	'WGL_BLUE_SHIFT_EXT',
	'WGL_COLOR_BITS_EXT',
	'WGL_DEPTH_BITS_EXT',
	'WGL_DOUBLE_BUFFER_EXT',
	'WGL_DRAW_TO_BITMAP_EXT',
	'WGL_DRAW_TO_WINDOW_EXT',
	'WGL_EXT_pixel_format',
	'WGL_FULL_ACCELERATION_EXT',
	'WGL_GENERIC_ACCELERATION_EXT',
	'WGL_GREEN_BITS_EXT',
	'WGL_GREEN_SHIFT_EXT',
	'WGL_NEED_PALETTE_EXT',
	'WGL_NEED_SYSTEM_PALETTE_EXT',
	'WGL_NO_ACCELERATION_EXT',
	'WGL_NUMBER_OVERLAYS_EXT',
	'WGL_NUMBER_PIXEL_FORMATS_EXT',
	'WGL_NUMBER_UNDERLAYS_EXT',
	'WGL_PIXEL_TYPE_EXT',
	'WGL_RED_BITS_EXT',
	'WGL_RED_SHIFT_EXT',
	'WGL_SHARE_ACCUM_EXT',
	'WGL_SHARE_DEPTH_EXT',
	'WGL_SHARE_STENCIL_EXT',
	'WGL_STENCIL_BITS_EXT',
	'WGL_STEREO_EXT',
	'WGL_SUPPORT_GDI_EXT',
	'WGL_SUPPORT_OPENGL_EXT',
	'WGL_SWAP_COPY_EXT',
	'WGL_SWAP_EXCHANGE_EXT',
	'WGL_SWAP_LAYER_BUFFERS_EXT',
	'WGL_SWAP_METHOD_EXT',
	'WGL_SWAP_UNDEFINED_EXT',
	'WGL_TRANSPARENT_EXT',
	'WGL_TRANSPARENT_VALUE_EXT',
	'WGL_TYPE_COLORINDEX_EXT',
	'WGL_TYPE_RGBA_EXT',
	'wglChoosePixelFormatEXT',
	'wglGetPixelFormatAttribfvEXT',
	'wglGetPixelFormatAttribivEXT']),

'WGL_EXT_pixel_format_packed_float': set([
	'WGL_EXT_pixel_format_packed_float',
	'WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT']),

'WGL_EXT_swap_control': set([
	'WGL_EXT_swap_control',
	'wglGetSwapIntervalEXT',
	'wglSwapIntervalEXT']),

'WGL_I3D_digital_video_control': set([
	'WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D',
	'WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D',
	'WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D',
	'WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D',
	'WGL_I3D_digital_video_control',
	'wglGetDigitalVideoParametersI3D',
	'wglSetDigitalVideoParametersI3D']),

'WGL_I3D_gamma': set([
	'WGL_GAMMA_EXCLUDE_DESKTOP_I3D',
	'WGL_GAMMA_TABLE_SIZE_I3D',
	'WGL_I3D_gamma',
	'wglGetGammaTableI3D',
	'wglGetGammaTableParametersI3D',
	'wglSetGammaTableI3D',
	'wglSetGammaTableParametersI3D']),

'WGL_I3D_genlock': set([
	'WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D',
	'WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D',
	'WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D',
	'WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D',
	'WGL_GENLOCK_SOURCE_EDGE_RISING_I3D',
	'WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D',
	'WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D',
	'WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D',
	'WGL_GENLOCK_SOURCE_MULTIVIEW_I3D',
	'WGL_I3D_genlock',
	'wglDisableGenlockI3D',
	'wglEnableGenlockI3D',
	'wglGenlockSampleRateI3D',
	'wglGenlockSourceDelayI3D',
	'wglGenlockSourceEdgeI3D',
	'wglGenlockSourceI3D',
	'wglGetGenlockSampleRateI3D',
	'wglGetGenlockSourceDelayI3D',
	'wglGetGenlockSourceEdgeI3D',
	'wglGetGenlockSourceI3D',
	'wglIsEnabledGenlockI3D',
	'wglQueryGenlockMaxSourceDelayI3D']),

'WGL_I3D_image_buffer': set([
	'WGL_I3D_image_buffer',
	'WGL_IMAGE_BUFFER_LOCK_I3D',
	'WGL_IMAGE_BUFFER_MIN_ACCESS_I3D',
	'wglAssociateImageBufferEventsI3D',
	'wglDestroyImageBufferI3D',
	'wglReleaseImageBufferEventsI3D']),

'WGL_I3D_swap_frame_lock': set([
	'WGL_I3D_swap_frame_lock',
	'wglDisableFrameLockI3D',
	'wglEnableFrameLockI3D',
	'wglIsEnabledFrameLockI3D',
	'wglQueryFrameLockMasterI3D']),

'WGL_I3D_swap_frame_usage': set([
	'WGL_I3D_swap_frame_usage',
	'wglBeginFrameTrackingI3D',
	'wglEndFrameTrackingI3D',
	'wglGetFrameUsageI3D',
	'wglQueryFrameTrackingI3D']),

'WGL_NV_copy_image': set([
	'WGL_NV_copy_image',
	'wglCopyImageSubDataNV']),

'WGL_NV_DX_interop': set([
	'WGL_ACCESS_READ_ONLY_NV',
	'WGL_ACCESS_READ_WRITE_NV',
	'WGL_ACCESS_WRITE_DISCARD_NV',
	'WGL_NV_DX_interop',
	'wglDXCloseDeviceNV',
	'wglDXLockObjectsNV',
	'wglDXObjectAccessNV',
	'wglDXOpenDeviceNV',
	'wglDXRegisterObjectNV',
	'wglDXSetResourceShareHandleNV',
	'wglDXUnlockObjectsNV',
	'wglDXUnregisterObjectNV']),

'WGL_NV_float_buffer': set([
	'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV',
	'WGL_FLOAT_COMPONENTS_NV',
	'WGL_NV_float_buffer',
	'WGL_TEXTURE_FLOAT_RGBA_NV',
	'WGL_TEXTURE_FLOAT_RGB_NV',
	'WGL_TEXTURE_FLOAT_RG_NV',
	'WGL_TEXTURE_FLOAT_R_NV']),

'WGL_NV_gpu_affinity': set([
	'WGL_ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV',
	'WGL_ERROR_MISSING_AFFINITY_MASK_NV',
	'WGL_NV_gpu_affinity',
	'wglCreateAffinityDCNV',
	'wglDeleteDCNV',
	'wglEnumGpuDevicesNV',
	'wglEnumGpusFromAffinityDCNV',
	'wglEnumGpusNV']),

'WGL_NV_multisample_coverage': set([
	'WGL_COLOR_SAMPLES_NV',
	'WGL_COVERAGE_SAMPLES_NV',
	'WGL_NV_multisample_coverage']),

'WGL_NV_present_video': set([
	'WGL_NUM_VIDEO_SLOTS_NV',
	'WGL_NV_present_video',
	'wglBindVideoDeviceNV',
	'wglEnumerateVideoDevicesNV',
	'wglQueryCurrentContextNV']),

'WGL_NV_render_depth_texture': set([
	'WGL_BIND_TO_TEXTURE_DEPTH_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV',
	'WGL_DEPTH_COMPONENT_NV',
	'WGL_DEPTH_TEXTURE_FORMAT_NV',
	'WGL_NO_TEXTURE_ARB',
	'WGL_NV_render_depth_texture',
	'WGL_TEXTURE_DEPTH_COMPONENT_NV']),

'WGL_NV_render_texture_rectangle': set([
	'WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV',
	'WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV',
	'WGL_NV_render_texture_rectangle',
	'WGL_TEXTURE_RECTANGLE_NV']),

'WGL_NV_swap_group': set([
	'WGL_NV_swap_group',
	'wglBindSwapBarrierNV',
	'wglJoinSwapGroupNV',
	'wglQueryFrameCountNV',
	'wglQueryMaxSwapGroupsNV',
	'wglQuerySwapGroupNV',
	'wglResetFrameCountNV']),

'WGL_NV_vertex_array_range': set([
	'WGL_NV_vertex_array_range',
	'wglAllocateMemoryNV',
	'wglFreeMemoryNV']),

'WGL_NV_video_capture': set([
	'WGL_NUM_VIDEO_CAPTURE_SLOTS_NV',
	'WGL_NV_video_capture',
	'WGL_UNIQUE_ID_NV',
	'wglBindVideoCaptureDeviceNV',
	'wglEnumerateVideoCaptureDevicesNV',
	'wglLockVideoCaptureDeviceNV',
	'wglQueryVideoCaptureDeviceNV',
	'wglReleaseVideoCaptureDeviceNV']),

'WGL_NV_video_output': set([
	'WGL_BIND_TO_VIDEO_RGBA_NV',
	'WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV',
	'WGL_BIND_TO_VIDEO_RGB_NV',
	'WGL_NV_video_output',
	'WGL_VIDEO_OUT_ALPHA_NV',
	'WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV',
	'WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV',
	'WGL_VIDEO_OUT_COLOR_NV',
	'WGL_VIDEO_OUT_DEPTH_NV',
	'WGL_VIDEO_OUT_FIELD_1',
	'WGL_VIDEO_OUT_FIELD_2',
	'WGL_VIDEO_OUT_FRAME',
	'WGL_VIDEO_OUT_STACKED_FIELDS_1_2',
	'WGL_VIDEO_OUT_STACKED_FIELDS_2_1',
	'wglBindVideoImageNV',
	'wglGetVideoDeviceNV',
	'wglGetVideoInfoNV',
	'wglReleaseVideoDeviceNV',
	'wglReleaseVideoImageNV',
	'wglSendPbufferToVideoNV']),

'WGL_OML_sync_control': set([
	'WGL_OML_sync_control',
	'wglGetMscRateOML',
	'wglGetSyncValuesOML',
	'wglSwapBuffersMscOML',
	'wglSwapLayerBuffersMscOML',
	'wglWaitForMscOML',
	'wglWaitForSbcOML']),

